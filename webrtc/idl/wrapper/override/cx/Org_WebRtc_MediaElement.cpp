// Generated by zsLibEventingTool


#ifndef CX_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENT
#include <wrapper/override/cx/Org_WebRtc_MediaElement.cpp>
#else // CX_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENT
#include "cx_Helpers.h"
#include "Org_WebRtc_MediaElement.h"

//------------------------------------------------------------------------------
::Org::WebRtc::MediaElement^ Org::WebRtc::MediaElement::ToCx(wrapper::org::webRtc::MediaElementPtr value)
{
  if (!value) return nullptr;
  auto result = ref new MediaElement(WrapperCreate{});
  result->native_ = value;
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::webRtc::MediaElementPtr Org::WebRtc::MediaElement::FromCx(::Org::WebRtc::MediaElement^ value)
{
  if (nullptr == value) return wrapper::org::webRtc::MediaElementPtr();
  return value->native_;
}

//------------------------------------------------------------------------------
Org::WebRtc::MediaElement::MediaElement(Platform::Object^ queue)
 : native_(wrapper::org::webRtc::MediaElement::wrapper_create())
{
  if (!native_) {throw ref new Platform::NullReferenceException();}
  native_->wrapper_init_org_webRtc_MediaElement(::Internal::Helper::FromCx(queue));
}

//------------------------------------------------------------------------------
Platform::Object^ Org::WebRtc::MediaElement::Element::get()
{
  if (!native_) {throw ref new Platform::NullReferenceException();}
  return ::Internal::Helper::ToCx(native_->get_element());
}

//------------------------------------------------------------------------------
void Org::WebRtc::MediaElement::Element::set(Platform::Object^ value)
{
  if (!native_) {throw ref new Platform::NullReferenceException();}
  native_->set_element(::Internal::Helper::FromCx(value));
}


#endif //ifndef CX_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENT
