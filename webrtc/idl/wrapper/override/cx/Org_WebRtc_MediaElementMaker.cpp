// Generated by zsLibEventingTool


#ifndef CX_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENTMAKER
#include <wrapper/override/cx/Org_WebRtc_MediaElementMaker.cpp>
#else // CX_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENTMAKER
#include "cx_Helpers.h"
#include "Org_WebRtc_MediaElementMaker.h"
#include "Org_WebRtc_MediaElement.h"

//------------------------------------------------------------------------------
::Org::WebRtc::MediaElementMaker^ Org::WebRtc::MediaElementMaker::ToCx(wrapper::org::webRtc::MediaElementMakerPtr value)
{
  if (!value) return nullptr;
  auto result = ref new MediaElementMaker(WrapperCreate{});
  result->native_ = value;
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::webRtc::MediaElementMakerPtr Org::WebRtc::MediaElementMaker::FromCx(::Org::WebRtc::MediaElementMaker^ value)
{
  if (nullptr == value) return wrapper::org::webRtc::MediaElementMakerPtr();
  return value->native_;
}

//------------------------------------------------------------------------------
::Org::WebRtc::MediaElement^ Org::WebRtc::MediaElementMaker::Bind(Platform::Object^ element)
{
  ::Org::WebRtc::MediaElement^ result {};
  result = ::Internal::Helper::ToCx_Org_WebRtc_MediaElement(wrapper::org::webRtc::MediaElementMaker::bind(::Internal::Helper::FromCx(element)));
  return result;
}

//------------------------------------------------------------------------------
Platform::Object^ Org::WebRtc::MediaElementMaker::Extract(::Org::WebRtc::MediaElement^ element)
{
  Platform::Object^ result {};
  result = ::Internal::Helper::ToCx(wrapper::org::webRtc::MediaElementMaker::extract(::Internal::Helper::FromCx_Org_WebRtc_MediaElement(element)));
  return result;
}


#endif //ifndef CX_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENTMAKER
