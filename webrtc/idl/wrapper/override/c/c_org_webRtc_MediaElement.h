
/* Generated by zsLibEventingTool */


#ifndef C_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENT
#include <wrapper/override/c/c_org_webRtc_MediaElement.h>
#else /* C_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENT */
#pragma once

#include "types.h"


WEBRTC_WRAPPER_C_PLUS_PLUS_BEGIN_GUARD


/* org_webRtc_MediaElement*/

WEBRTC_WRAPPER_C_EXPORT_API org_webRtc_MediaElement_t WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_MediaElement_wrapperClone(org_webRtc_MediaElement_t handle);
WEBRTC_WRAPPER_C_EXPORT_API void WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_MediaElement_wrapperDestroy(org_webRtc_MediaElement_t handle);
WEBRTC_WRAPPER_C_EXPORT_API instance_id_t WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_MediaElement_wrapperInstanceId(org_webRtc_MediaElement_t handle);
WEBRTC_WRAPPER_C_EXPORT_API org_webRtc_MediaElement_t WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_MediaElement_wrapperCreate_MediaElementWithNativeQueue(zs_Any_t queue);
WEBRTC_WRAPPER_C_EXPORT_API zs_Any_t WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_MediaElement_get_element(org_webRtc_MediaElement_t wrapperThisHandle);
WEBRTC_WRAPPER_C_EXPORT_API void WEBRTC_WRAPPER_C_CALLING_CONVENTION org_webRtc_MediaElement_set_element(org_webRtc_MediaElement_t wrapperThisHandle, zs_Any_t value);


WEBRTC_WRAPPER_C_PLUS_PLUS_END_GUARD

#ifdef __cplusplus


namespace wrapper
{
  org_webRtc_MediaElement_t org_webRtc_MediaElement_wrapperToHandle(wrapper::org::webRtc::MediaElementPtr value);
  wrapper::org::webRtc::MediaElementPtr org_webRtc_MediaElement_wrapperFromHandle(org_webRtc_MediaElement_t handle);

} /* namespace wrapper */
#endif /* __cplusplus */

#endif /* ifndef C_USE_GENERATED_ORG_WEBRTC_MEDIAELEMENT */
