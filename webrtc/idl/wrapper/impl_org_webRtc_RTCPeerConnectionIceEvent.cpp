// Generated by zsLibEventingTool

#include "impl_org_webRtc_RTCPeerConnectionIceEvent.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::PromiseWithHolderPtr;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::webRtc::RTCPeerConnectionIceEvent::RTCPeerConnectionIceEvent() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webRtc::RTCPeerConnectionIceEventPtr wrapper::org::webRtc::RTCPeerConnectionIceEvent::wrapper_create() noexcept
{
  auto pThis = make_shared<wrapper::impl::org::webRtc::RTCPeerConnectionIceEvent>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::webRtc::RTCPeerConnectionIceEvent::~RTCPeerConnectionIceEvent() noexcept
{
  thisWeak_.reset();
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webRtc::RTCPeerConnectionIceEvent::wrapper_init_org_webRtc_RTCPeerConnectionIceEvent() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webRtc::RTCIceCandidatePtr wrapper::impl::org::webRtc::RTCPeerConnectionIceEvent::get_candidate() noexcept
{
  wrapper::org::webRtc::RTCIceCandidatePtr result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webRtc::RTCPeerConnectionIceEvent::get_url() noexcept
{
  String result {};
  return result;
}


