// Generated by zsLibEventingTool

#include "impl_org_webrtc_RTCIceCandidatePairStats.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::PromiseWithHolderPtr;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::webrtc::RTCIceCandidatePairStats::RTCIceCandidatePairStats() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCIceCandidatePairStatsPtr wrapper::org::webrtc::RTCIceCandidatePairStats::wrapper_create() noexcept
{
  auto pThis = make_shared<wrapper::impl::org::webrtc::RTCIceCandidatePairStats>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::webrtc::RTCIceCandidatePairStats::~RTCIceCandidatePairStats() noexcept
{
  thisWeak_.reset();
}

//------------------------------------------------------------------------------
::zsLib::Time wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_timestamp() noexcept
{
  ::zsLib::Time result {};
  return result;
}

//------------------------------------------------------------------------------
Optional< wrapper::org::webrtc::RTCStatsType > wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_statsType() noexcept
{
  Optional< wrapper::org::webrtc::RTCStatsType > result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_statsTypeOther() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_id() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCIceCandidatePairStats::wrapper_init_org_webrtc_RTCIceCandidatePairStats() noexcept
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCIceCandidatePairStats::wrapper_init_org_webrtc_RTCIceCandidatePairStats(wrapper::org::webrtc::RTCIceCandidatePairStatsPtr source) noexcept
{
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_transportId() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_localCandidateId() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_remoteCandidateId() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCIceCandidatePairState wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_state() noexcept
{
  wrapper::org::webrtc::RTCIceCandidatePairState result {};
  return result;
}

//------------------------------------------------------------------------------
unsigned long long wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_priority() noexcept
{
  unsigned long long result {};
  return result;
}

//------------------------------------------------------------------------------
bool wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_nominated() noexcept
{
  bool result {};
  return result;
}

//------------------------------------------------------------------------------
bool wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_writable() noexcept
{
  bool result {};
  return result;
}

//------------------------------------------------------------------------------
bool wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_readable() noexcept
{
  bool result {};
  return result;
}

//------------------------------------------------------------------------------
unsigned long long wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_bytesSent() noexcept
{
  unsigned long long result {};
  return result;
}

//------------------------------------------------------------------------------
unsigned long long wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_bytesReceived() noexcept
{
  unsigned long long result {};
  return result;
}

//------------------------------------------------------------------------------
double wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_roundTripTime() noexcept
{
  double result {};
  return result;
}

//------------------------------------------------------------------------------
double wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_availableOutgoingBitrate() noexcept
{
  double result {};
  return result;
}

//------------------------------------------------------------------------------
double wrapper::impl::org::webrtc::RTCIceCandidatePairStats::get_availableIncomingBitrate() noexcept
{
  double result {};
  return result;
}


