// Generated by zsLibEventingTool

#include "impl_org_webrtc_RTCError.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::PromiseWithHolderPtr;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::webrtc::RTCError::RTCError() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCErrorPtr wrapper::org::webrtc::RTCError::wrapper_create() noexcept
{
  auto pThis = make_shared<wrapper::impl::org::webrtc::RTCError>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::webrtc::RTCError::~RTCError()
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCError::wrapper_init_org_webrtc_RTCError() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCErrorType wrapper::impl::org::webrtc::RTCError::get_type() noexcept
{
  wrapper::org::webrtc::RTCErrorType result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCError::get_message() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
bool wrapper::impl::org::webrtc::RTCError::get_ok() noexcept
{
  bool result {};
  return result;
}


