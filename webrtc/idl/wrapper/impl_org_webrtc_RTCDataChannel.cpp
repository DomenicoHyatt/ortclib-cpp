// Generated by zsLibEventingTool

#include "impl_org_webrtc_RTCDataChannel.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::PromiseWithHolderPtr;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::webrtc::RTCDataChannel::RTCDataChannel() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCDataChannelPtr wrapper::org::webrtc::RTCDataChannel::wrapper_create() noexcept
{
  auto pThis = make_shared<wrapper::impl::org::webrtc::RTCDataChannel>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::webrtc::RTCDataChannel::~RTCDataChannel()
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::wrapper_init_org_webrtc_RTCDataChannel() noexcept
{
}

//------------------------------------------------------------------------------
shared_ptr< PromiseWithHolderPtr< wrapper::org::webrtc::RTCStatsReportPtr > > wrapper::impl::org::webrtc::RTCDataChannel::getStats(wrapper::org::webrtc::RTCStatsTypeSetPtr statTypes) noexcept(false)
{
  shared_ptr< PromiseWithHolderPtr< wrapper::org::webrtc::RTCStatsReportPtr > > result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::close() noexcept
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::send(String text) noexcept(false)
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::send(SecureByteBlockPtr data) noexcept(false)
{
}

//------------------------------------------------------------------------------
unsigned short wrapper::impl::org::webrtc::RTCDataChannel::get_id() noexcept
{
  unsigned short result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCDataChannel::get_label() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
bool wrapper::impl::org::webrtc::RTCDataChannel::get_ordered() noexcept
{
  bool result {};
  return result;
}

//------------------------------------------------------------------------------
::zsLib::Milliseconds wrapper::impl::org::webrtc::RTCDataChannel::get_maxPacketLifeTime() noexcept
{
  ::zsLib::Milliseconds result {};
  return result;
}

//------------------------------------------------------------------------------
unsigned short wrapper::impl::org::webrtc::RTCDataChannel::get_maxRetransmits() noexcept
{
  unsigned short result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCDataChannel::get_protocol() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
bool wrapper::impl::org::webrtc::RTCDataChannel::get_negotiated() noexcept
{
  bool result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCPriorityType wrapper::impl::org::webrtc::RTCDataChannel::get_priority() noexcept
{
  wrapper::org::webrtc::RTCPriorityType result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::webrtc::RTCDataChannelState wrapper::impl::org::webrtc::RTCDataChannel::get_readyState() noexcept
{
  wrapper::org::webrtc::RTCDataChannelState result {};
  return result;
}

//------------------------------------------------------------------------------
uint64_t wrapper::impl::org::webrtc::RTCDataChannel::get_bufferedAmount() noexcept
{
  uint64_t result {};
  return result;
}

//------------------------------------------------------------------------------
uint64_t wrapper::impl::org::webrtc::RTCDataChannel::get_bufferedAmountLowThreshold() noexcept
{
  uint64_t result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::set_bufferedAmountLowThreshold(uint64_t value) noexcept
{
}

//------------------------------------------------------------------------------
String wrapper::impl::org::webrtc::RTCDataChannel::get_binaryType() noexcept
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::set_binaryType(String value) noexcept
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::webrtc::RTCDataChannel::wrapper_onObserverCountChanged(size_t count) noexcept
{
}


