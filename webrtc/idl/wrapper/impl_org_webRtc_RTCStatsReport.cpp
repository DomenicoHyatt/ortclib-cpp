// Generated by zsLibEventingTool

#include "impl_org_webRtc_RTCStatsReport.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::PromiseWithHolderPtr;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

// borrow definitions from class
ZS_DECLARE_TYPEDEF_PTR(wrapper::impl::org::webRtc::RTCStatsReport::WrapperImplType, WrapperImplType);
ZS_DECLARE_TYPEDEF_PTR(WrapperImplType::WrapperType, WrapperType);

//------------------------------------------------------------------------------
wrapper::impl::org::webRtc::RTCStatsReport::RTCStatsReport() noexcept
{
}

//------------------------------------------------------------------------------
wrapper::org::webRtc::RTCStatsReportPtr wrapper::org::webRtc::RTCStatsReport::wrapper_create() noexcept
{
  auto pThis = make_shared<wrapper::impl::org::webRtc::RTCStatsReport>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::webRtc::RTCStatsReport::~RTCStatsReport() noexcept
{
  thisWeak_.reset();
}

//------------------------------------------------------------------------------
wrapper::org::webRtc::RTCStatsPtr wrapper::impl::org::webRtc::RTCStatsReport::getStats(String id) noexcept
{
  wrapper::org::webRtc::RTCStatsPtr result {};
  return result;
}

//------------------------------------------------------------------------------
uint64_t wrapper::impl::org::webRtc::RTCStatsReport::get_objectId() noexcept
{
  uint64_t result {};
  return result;
}

//------------------------------------------------------------------------------
shared_ptr< list< String > > wrapper::impl::org::webRtc::RTCStatsReport::get_statsIds() noexcept
{
  shared_ptr< list< String > > result {};
  return result;
}


