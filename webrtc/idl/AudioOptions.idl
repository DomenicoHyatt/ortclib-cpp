/*

 Copyright (c) 2017, Optical Tone Ltd.
 All rights reserved.

 Redistribution and use in source and binary forms, with or without
 modification, are permitted provided that the following conditions are met:

 1. Redistributions of source code must retain the above copyright notice, this
 list of conditions and the following disclaimer.
 2. Redistributions in binary form must reproduce the above copyright notice,
 this list of conditions and the following disclaimer in the documentation
 and/or other materials provided with the distribution.

 THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
 ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR
 ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND
 ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS
 SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

 The views and conclusions contained in the software and documentation are those
 of the authors and should not be interpreted as representing official policies,
 either expressed or implied, of the FreeBSD Project.
 
 */


namespace org
{
  namespace webRtc
  {

    [dictionary]
    struct AudioOptions
    {
      /// <summary>
      /// Audio processing that attempts to filter away the output signal from
      /// later inbound pickup.
      /// </summary>
      [optional]
      bool echoCancellation;

      /// <summary>
      /// Forces software echo cancellation on iOS. This is a temporary workaround
      /// (until Apple fixes the bug) for a device with non-functioning AEC. May
      /// improve performance on that particular device, but will cause unpredictable
      /// behavior in all other cases. See http://bugs.webrtc.org/8682.
      /// </summary>
      [optional, obsolete("This method will be deprecated")]
      bool iosForceSoftwareAec_HACK;

      /// <summary>
      /// Audio processing to adjust the sensitivity of the local mic dynamically.
      /// </summary>
      [optional]
      bool autoGainControl;

      /// <summary>
      /// Audio processing to filter out background noise.
      /// </summary>
      [optional]
      bool noiseSuppression;

      /// <summary>
      /// Audio processing to remove background noise of lower frequencies.
      /// </summary>
      [optional]
      bool highpassFilter;

      /// <summary>
      /// Audio processing to swap the left and right channels.
      /// </summary>
      [optional]
      bool stereoSwapping;

      /// <summary>
      /// Audio receiver jitter buffer (NetEq) max capacity in number of packets.
      /// </summary>
      [optional]
      int audioJitterBufferMaxPackets;

      /// <summary>
      /// Audio receiver jitter buffer (NetEq) fast accelerate mode.
      /// </summary>
      [optional]
      bool audioJitterBufferFastAccelerate;

      /// <summary>
      /// Audio processing to detect typing.
      /// </summary>
      [optional]
      bool typingDetection;

      [optional]
      bool aecmGenerateComfortNoise;

      [optional]
      bool experimentalAgc;

      [optional]
      bool extendedFilterAec;

      [optional]
      bool delayAgnosticAec;

      [optional]
      bool experimentalNs;

      [optional]
      bool intelligibilityEnhancer;

      [optional]
      bool levelControl;

      [optional]
      /// <summary>
      /// Specifies an optional initialization value for the level controller.
      /// </summary>
      float levelControlInitialPeakLevelDbfs;

      /// <summary>
      /// Note that tx_agc_* only applies to non-experimental AGC.
      /// </summary>
      [optional]
      bool residualEchoDetector;

      [optional]
      uint16 txAgcTargetDbov;

      [optional]
      uint16 txAgcDigitalCompressionGain;

      [optional]
      bool txAgcLimiter;

      /// <summary>
      /// Enable combined audio+bandwidth BWE.
      /// TODO(pthatcher): This flag is set from the
      /// "googCombinedAudioVideoBwe", but not used anywhere. So delete it,
      /// and check if any other AudioOptions members are unused.
      /// </summary>
      [optional]
      bool combinedAudioVideoBwe;

      /// <summary>
      /// Enable audio network adaptor.
      /// </summary>
      [optional]
      bool audioNetworkAdaptor;

      /// <summary>
      /// Config string for audio network adaptor.
      /// </summary>
      string audioNetworkAdaptorConfig;
    };
  }
}
