// Generated by zsLibEventingTool

#include "impl_org_ortc_RTCCertificate.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::ortc::RTCCertificate::RTCCertificate()
{
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCCertificatePtr wrapper::org::ortc::RTCCertificate::wrapper_create()
{
  auto pThis = make_shared<wrapper::impl::org::ortc::RTCCertificate>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::ortc::RTCCertificate::~RTCCertificate()
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCCertificate::wrapper_init_org_ortc_RTCCertificate()
{
}

//------------------------------------------------------------------------------
shared_ptr< PromiseWithHolder< wrapper::org::ortc::RTCCertificatePtr > > wrapper::org::ortc::RTCCertificate::generateCertificate()
{
  shared_ptr< PromiseWithHolder< wrapper::org::ortc::RTCCertificatePtr > > result {};
  return result;
}

//------------------------------------------------------------------------------
shared_ptr< PromiseWithHolder< wrapper::org::ortc::RTCCertificatePtr > > wrapper::org::ortc::RTCCertificate::generateCertificate(String keygenAlgorithm)
{
  shared_ptr< PromiseWithHolder< wrapper::org::ortc::RTCCertificatePtr > > result {};
  return result;
}

//------------------------------------------------------------------------------
shared_ptr< PromiseWithHolder< wrapper::org::ortc::RTCCertificatePtr > > wrapper::org::ortc::RTCCertificate::generateCertificate(wrapper::org::ortc::JsonPtr keygenAlgorithm)
{
  shared_ptr< PromiseWithHolder< wrapper::org::ortc::RTCCertificatePtr > > result {};
  return result;
}

//------------------------------------------------------------------------------
uint64_t wrapper::impl::org::ortc::RTCCertificate::get_objectId()
{
  uint64_t result {};
  return result;
}

//------------------------------------------------------------------------------
::zsLib::Time wrapper::impl::org::ortc::RTCCertificate::get_expires()
{
  ::zsLib::Time result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCDtlsFingerprintPtr wrapper::impl::org::ortc::RTCCertificate::get_fingerprint()
{
  wrapper::org::ortc::RTCDtlsFingerprintPtr result {};
  return result;
}


