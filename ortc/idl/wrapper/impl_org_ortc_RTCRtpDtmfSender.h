// Generated by zsLibEventingTool

#pragma once

#include "types.h"
#include "generated/org_ortc_RTCRtpDtmfSender.h"


namespace wrapper {
  namespace impl {
    namespace org {
      namespace ortc {

        struct RTCRtpDtmfSender : public wrapper::org::ortc::RTCRtpDtmfSender
        {
          RTCRtpDtmfSenderWeakPtr thisWeak_;

          RTCRtpDtmfSender();
          virtual ~RTCRtpDtmfSender();

          // methods RTCRtpDtmfSender
          virtual void wrapper_init_org_ortc_RTCRtpDtmfSender(wrapper::org::ortc::RTCRtpSenderPtr sender) override;
          virtual bool canInsertDtmf() override;
          virtual void insertDtmf(String tones) override;
          virtual void insertDtmf(
            String tones,
            ::zsLib::Milliseconds duration
            ) override;
          virtual void insertDtmf(
            String tones,
            ::zsLib::Milliseconds duration,
            ::zsLib::Milliseconds interToneGap
            ) override;

          // properties RTCRtpDtmfSender
          virtual uint64_t get_objectId() override;
          virtual wrapper::org::ortc::RTCRtpSenderPtr get_sender() override;
          virtual String get_toneBuffer() override;
          virtual ::zsLib::Milliseconds get_duration() override;
          virtual ::zsLib::Milliseconds get_interToneGap() override;

          virtual void wrapper_onObserverCountChanged(size_t count) override;
        };

      } // ortc
    } // org
  } // namespace impl
} // namespace wrapper

