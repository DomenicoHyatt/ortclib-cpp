// Generated by zsLibEventingTool

#include "impl_org_ortc_RTCRtpSender.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWith;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::ortc::RTCRtpSender::RTCRtpSender()
{
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCRtpSenderPtr wrapper::org::ortc::RTCRtpSender::wrapper_create()
{
  auto pThis = make_shared<wrapper::impl::org::ortc::RTCRtpSender>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::ortc::RTCRtpSender::~RTCRtpSender()
{
}

//------------------------------------------------------------------------------
shared_ptr< PromiseWith< wrapper::org::ortc::RTCStatsReportPtr > > wrapper::impl::org::ortc::RTCRtpSender::getStats(wrapper::org::ortc::RTCStatsTypeSetPtr statTypes)
{
  shared_ptr< PromiseWith< wrapper::org::ortc::RTCStatsReportPtr > > result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCRtpSender::wrapper_init_org_ortc_RTCRtpSender(
  wrapper::org::ortc::MediaStreamTrackPtr track,
  wrapper::org::ortc::RTCRtpTransportPtr transport
  )
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCRtpSender::wrapper_init_org_ortc_RTCRtpSender(
  wrapper::org::ortc::MediaStreamTrackPtr track,
  wrapper::org::ortc::RTCRtpTransportPtr transport,
  wrapper::org::ortc::RTCRtcpTransportPtr rtcpTransport
  )
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCRtpSender::setTransport(wrapper::org::ortc::RTCRtpTransportPtr transport)
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCRtpSender::setTransport(
  wrapper::org::ortc::RTCRtpTransportPtr transport,
  wrapper::org::ortc::RTCRtcpTransportPtr rtcpTransport
  )
{
}

//------------------------------------------------------------------------------
PromisePtr wrapper::impl::org::ortc::RTCRtpSender::setTrack(wrapper::org::ortc::MediaStreamTrackPtr track)
{
  PromisePtr result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCRtpCapabilitiesPtr wrapper::org::ortc::RTCRtpSender::getCapabilities(Optional< wrapper::org::ortc::MediaStreamTrackKind > kind)
{
  wrapper::org::ortc::RTCRtpCapabilitiesPtr result {};
  return result;
}

//------------------------------------------------------------------------------
PromisePtr wrapper::impl::org::ortc::RTCRtpSender::send(wrapper::org::ortc::RTCRtpParametersPtr parameters)
{
  PromisePtr result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCRtpSender::stop()
{
}

//------------------------------------------------------------------------------
uint64_t wrapper::impl::org::ortc::RTCRtpSender::get_objectId()
{
  uint64_t result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::MediaStreamTrackPtr wrapper::impl::org::ortc::RTCRtpSender::get_track()
{
  wrapper::org::ortc::MediaStreamTrackPtr result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCRtpTransportPtr wrapper::impl::org::ortc::RTCRtpSender::get_transport()
{
  wrapper::org::ortc::RTCRtpTransportPtr result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCRtcpTransportPtr wrapper::impl::org::ortc::RTCRtpSender::get_rtcpTransport()
{
  wrapper::org::ortc::RTCRtcpTransportPtr result {};
  return result;
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCRtpSender::wrapper_onObserverCountChanged(size_t count)
{
}


