// Generated by zsLibEventingTool

#include "impl_org_ortc_RTCIceCandidate.h"

using ::zsLib::String;
using ::zsLib::Optional;
using ::zsLib::Any;
using ::zsLib::AnyPtr;
using ::zsLib::AnyHolder;
using ::zsLib::Promise;
using ::zsLib::PromisePtr;
using ::zsLib::PromiseWithHolder;
using ::zsLib::PromiseWithHolderPtr;
using ::zsLib::eventing::SecureByteBlock;
using ::zsLib::eventing::SecureByteBlockPtr;
using ::std::shared_ptr;
using ::std::weak_ptr;
using ::std::make_shared;
using ::std::list;
using ::std::set;
using ::std::map;

//------------------------------------------------------------------------------
wrapper::impl::org::ortc::RTCIceCandidate::RTCIceCandidate()
{
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCIceCandidatePtr wrapper::org::ortc::RTCIceCandidate::wrapper_create()
{
  auto pThis = make_shared<wrapper::impl::org::ortc::RTCIceCandidate>();
  pThis->thisWeak_ = pThis;
  return pThis;
}

//------------------------------------------------------------------------------
wrapper::impl::org::ortc::RTCIceCandidate::~RTCIceCandidate()
{
}

//------------------------------------------------------------------------------
void wrapper::impl::org::ortc::RTCIceCandidate::wrapper_init_org_ortc_RTCIceCandidate()
{
}

//------------------------------------------------------------------------------
wrapper::org::ortc::JsonPtr wrapper::impl::org::ortc::RTCIceCandidate::toJson()
{
  wrapper::org::ortc::JsonPtr result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::ortc::RTCIceCandidate::hash()
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCIceComponent wrapper::impl::org::ortc::RTCIceCandidate::get_component()
{
  wrapper::org::ortc::RTCIceComponent result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::ortc::RTCIceCandidate::get_interfaceType()
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::ortc::RTCIceCandidate::get_foundation()
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
uint32_t wrapper::impl::org::ortc::RTCIceCandidate::get_priority()
{
  uint32_t result {};
  return result;
}

//------------------------------------------------------------------------------
uint32_t wrapper::impl::org::ortc::RTCIceCandidate::get_unfreezePriority()
{
  uint32_t result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCIceProtocol wrapper::impl::org::ortc::RTCIceCandidate::get_protocol()
{
  wrapper::org::ortc::RTCIceProtocol result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::ortc::RTCIceCandidate::get_ip()
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
uint16_t wrapper::impl::org::ortc::RTCIceCandidate::get_port()
{
  uint16_t result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCIceCandidateType wrapper::impl::org::ortc::RTCIceCandidate::get_candidateType()
{
  wrapper::org::ortc::RTCIceCandidateType result {};
  return result;
}

//------------------------------------------------------------------------------
wrapper::org::ortc::RTCIceTcpCandidateType wrapper::impl::org::ortc::RTCIceCandidate::get_tcpType()
{
  wrapper::org::ortc::RTCIceTcpCandidateType result {};
  return result;
}

//------------------------------------------------------------------------------
String wrapper::impl::org::ortc::RTCIceCandidate::get_relatedAddress()
{
  String result {};
  return result;
}

//------------------------------------------------------------------------------
uint16_t wrapper::impl::org::ortc::RTCIceCandidate::get_relatedPort()
{
  uint16_t result {};
  return result;
}


